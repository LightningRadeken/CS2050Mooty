import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class MootyGE01Polymorphism 
{
	public static void main(String[] args) throws FileNotFoundException
	{
		String name;
		String food;
		int weight;
		int sleep;
		String location;
		File input =  new File("Animal.txt");
		Scanner file = new Scanner (input);
		int count = Integer.parseInt(file.next());
		int counter = 0;
		while(counter < count)
		{
			String[] Animals = new String[count];
			String type = file.next();
			Animals[counter] = type;
			if (type == "Bear")
			{
				name = file.next();
				food = file.next();
				weight = Integer.parseInt(file.next());
				sleep = Integer.parseInt(file.next());
				location = file.next() + " " + file.next();
				Animal Bear = new Bear(name,food,weight,sleep,location);
				System.out.println("Animal[" + counter + "] is a Bear");
				System.out.println("Bear Name: " + Bear.getName()+" - Weighs: " 
				+Bear.getWeight() + " lbs - Sleeps: " + Bear.getSleep() + 
				" hrs - Location: " + Bear.getLocation());
				Bear.eat();
				Bear.sleep();
				Bear.swim();
			}
			if (type == "Elephant")
			{
				name = file.next();
				food = file.next();
				weight = Integer.parseInt(file.next());
				sleep = Integer.parseInt(file.next());
				location = file.next() + " " + file.next();
				Animal Elephant = new Elephant(name,food,weight,sleep,location);
				System.out.println("Animal[" + counter + "] is a Elephant");
				System.out.println("Elephant Name: " + Elephant.getName()+" - Weighs: " 
				+Elephant.getWeight() + " lbs - Sleeps: " + Elephant.getSleep() + 
				" hrs - Location: " + Elephant.getLocation());
				Elephant.eat();
				Elephant.sleep();
				Elephant.swim();
			}
			if (type == "Monkey")
			{
				name = file.next();
				food = file.next();
				weight = Integer.parseInt(file.next());
				sleep = Integer.parseInt(file.next());
				location = file.next() + " " + file.next();
				Animal Monkey = new Monkey(name,food,weight,sleep,location);
				System.out.println("Animal[" + counter + "] is a Monkey");
				System.out.println("Monkey Name: " + Monkey.getName()+" - Weighs: " 
				+Monkey.getWeight() + " lbs - Sleeps: " + Monkey.getSleep() + 
				" hrs - Location: " + Monkey.getLocation());
				Monkey.eat();
				Monkey.sleep();
				Monkey.swim();
			}
			if (type == "Sloth")
			{
				name = file.next();
				food = file.next();
				weight = Integer.parseInt(file.next());
				sleep = Integer.parseInt(file.next());
				location = file.next() + " " + file.next();
				Animal Sloth = new Sloth(name,food,weight,sleep,location);
				System.out.println("Animal[" + counter + "] is a Sloth");
				System.out.println("Sloth Name: " + Sloth.getName()+" - Weighs: " 
				+Sloth.getWeight() + " lbs - Sleeps: " + Sloth.getSleep() + 
				" hrs - Location: " + Sloth.getLocation());
				Sloth.eat();
				Sloth.sleep();
				Sloth.swim();
			}
			counter++;
			
		}
		file.close();
	}
}
class Animal
{
	private String name = "";
	private String food = "";
	private int weight = 0;
	private int sleep = 0;
	private String location = "";
	public Animal()
	{
		
	}
	public Animal(String name, String food, int weight, int sleep, String location)
	{
		this.name = name;
		this.food = food;
		this.weight = weight;
		this.sleep = sleep;
		this.location = location;
	}
	public String getName()
	{
		return name;
	}
	public String getFood()
	{
		return food;
	}
	public int getWeight()
	{
		return weight;
	}
	public int getSleep()
	{
		return sleep;
	}
	public String getLocation()
	{
		return location;
	}
	public void eat()
	{
		System.out.println("Animal is eatting");
	}
	public void sleep()
	{
		System.out.println("Animal is sleeping");
	}
	public void swim()
	{
		System.out.println("Animal is swimming");
	}
	
}
class Bear extends Animal
{
	public Bear(String name, String food, int weight, int sleep, String location)
	{
		
	}
	
	@Override
	public void eat()
	{
		System.out.println("Bear is eatting some " + this.getFood());
	}
	@Override
	public void sleep()
	{
		System.out.println("Bear is asleep -KEEP QUIET-");
		System.out.println("sleeping for the next " + this.getSleep() + " Hrs");
	}
	@Override
	public void swim()
	{
		System.out.println("Bear is swimming around");
	}
}
class Elephant extends Animal
{
	public Elephant(String name, String food, int weight, int sleep, String location)
	{
		
	}
	@Override
	public void sleep()
	{
		System.out.println("Elephant is taking a nap -KEEP IT DOWN-");
		System.out.println("sleeping for the next " + this.getSleep() + " Hrs");
	}
}
class Monkey extends Animal
{
	public Monkey(String name, String food, int weight, int sleep, String location)
	{
		
	}
	@Override
	public void eat()
	{
		System.out.println("Monkey is eatting some " + this.getFood() );
	}
	@Override
	public void swim()
	{
		System.out.println("Monkey is going for a swim");
	}
}
class Sloth extends Animal
{
	public Sloth(String name, String food, int weight, int sleep, String location)
	{
		
	}
}
